#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π Slack –±–æ—Ç–∞
"""

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –±–æ—Ç–∞ –±–µ–∑ –∑–∞–ø—É—Å–∫–∞ Slack
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(__file__))

from slack_ai_bot import globalping_hybrid_check, extract_targets, run_command

def test_target_extraction():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ü–µ–ª–µ–π –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ü–µ–ª–µ–π –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏–π")
    print("-" * 40)
    
    test_messages = [
        {
            'text': 'google.com –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç',
            'expected': ['google.com']
        },
        {
            'text': '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ https://github.com',
            'expected': ['https://github.com']
        },
        {
            'text': '–°–∞–π—Ç 8.8.8.8 –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω',
            'expected': ['8.8.8.8']
        },
        {
            'text': '–ü—Ä–æ–±–ª–µ–º—ã —Å example.org –∏ test.com',
            'expected': ['example.org', 'test.com']
        }
    ]
    
    for test_case in test_messages:
        event = {'text': test_case['text']}
        targets = extract_targets(event)
        print(f"–¢–µ–∫—Å—Ç: '{test_case['text']}'")
        print(f"–ù–∞–π–¥–µ–Ω–æ: {targets}")
        print(f"–û–∂–∏–¥–∞–ª–æ—Å—å: {test_case['expected']}")
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ' if targets == test_case['expected'] else '‚ùå'}")
        print()

def test_hybrid_globalping():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≥–∏–±—Ä–∏–¥–Ω—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é Globalping"""
    print("üåç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–∏–±—Ä–∏–¥–Ω–æ–π Globalping –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏")
    print("-" * 40)
    
    test_cases = [
        {'target': 'google.com', 'test_type': 'ping'},
        {'target': 'github.com', 'test_type': 'http'}
    ]
    
    for test_case in test_cases:
        print(f"–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ {test_case['test_type']} –¥–ª—è {test_case['target']}...")
        result = globalping_hybrid_check(
            test_case['target'], 
            test_type=test_case['test_type'],
            locations="EU"
        )
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result[:150]}...")
        print()

def test_local_commands():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–µ —Å–µ—Ç–µ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã"""
    print("üíª –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥")
    print("-" * 40)
    
    commands = [
        'ping -n 2 google.com',
        'nslookup google.com'
    ]
    
    for command in commands:
        print(f"–ö–æ–º–∞–Ω–¥–∞: {command}")
        result = run_command(command)
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result[:100]}...")
        print()

if __name__ == "__main__":
    print("üß™ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç Slack AI Bot —Ñ—É–Ω–∫—Ü–∏–π")
    print("=" * 50)
    
    try:
        test_target_extraction()
        test_hybrid_globalping()
        test_local_commands()
        
        print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
        print("\nüöÄ –ì–æ—Ç–æ–≤–æ –∫ –∑–∞–ø—É—Å–∫—É:")
        print("python slack_ai_bot.py")
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π") 