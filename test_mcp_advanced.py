#!/usr/bin/env python3
"""
–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Ç–µ—Å—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ Globalping MCP –∫–ª–∏–µ–Ω—Ç–∞
"""

from globalping_mcp_client import GlobalpingMCPClient
import requests
import json

def test_mcp_endpoints():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ MCP —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã"""
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ MCP —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ Globalping...")
    print("=" * 50)
    
    endpoints = [
        "https://mcp.globalping.dev/sse",
        "https://mcp.globalping.dev/api", 
        "https://mcp.globalping.dev",
        "https://api.globalping.io/mcp"
    ]
    
    # –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
    test_requests = [
        {
            "name": "tools/list",
            "data": {
                "jsonrpc": "2.0",
                "id": 1,
                "method": "tools/list"
            }
        },
        {
            "name": "initialize", 
            "data": {
                "jsonrpc": "2.0",
                "id": 0,
                "method": "initialize",
                "params": {
                    "protocolVersion": "2024-11-05",
                    "capabilities": {},
                    "clientInfo": {
                        "name": "GlobalpingMCPClient",
                        "version": "2.0"
                    }
                }
            }
        }
    ]
    
    working_endpoints = []
    
    for endpoint in endpoints:
        print(f"\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {endpoint}")
        
        for req in test_requests:
            print(f"  –ó–∞–ø—Ä–æ—Å: {req['name']}")
            
            headers = {
                "Content-Type": "application/json", 
                "Accept": "application/json",
                "User-Agent": "GlobalpingMCPClient/2.0"
            }
            
            try:
                response = requests.post(
                    endpoint,
                    json=req['data'],
                    headers=headers,
                    timeout=10
                )
                
                print(f"  –°—Ç–∞—Ç—É—Å: {response.status_code}")
                
                if response.status_code == 200:
                    print("  ‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç!")
                    working_endpoints.append(endpoint)
                    try:
                        result = response.json()
                        if "result" in result:
                            print(f"  –î–∞–Ω–Ω—ã–µ: {str(result['result'])[:100]}...")
                    except:
                        pass
                    break
                elif response.status_code == 401:
                    print("  ‚ùå 401 - –ù—É–∂–Ω–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è") 
                elif response.status_code == 404:
                    print("  ‚ùå 404 - –≠–Ω–¥–ø–æ–∏–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
                else:
                    print(f"  ‚ùå {response.status_code}")
                    
            except requests.exceptions.RequestException as e:
                print(f"  ‚ùå –û—à–∏–±–∫–∞: {str(e)[:50]}...")
    
    print(f"\nüìä –†–∞–±–æ—á–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã: {working_endpoints}")
    return working_endpoints

def test_improved_client():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É–ª—É—á—à–µ–Ω–Ω—ã–π MCP –∫–ª–∏–µ–Ω—Ç"""
    
    print("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ MCP –∫–ª–∏–µ–Ω—Ç–∞...")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
    client = GlobalpingMCPClient()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º ping
    print("üì° –¢–µ—Å—Ç ping:")
    result = client.ping("google.com", "EU", 2)
    
    print(f"–£—Å–ø–µ—Ö: {result['success']}")
    if result['success']:
        print("‚úÖ MCP PING —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result['result'][:200]}...")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º HTTP
        print("\nüåê –¢–µ—Å—Ç HTTP:")
        http_result = client.http("google.com", "EU", 2)
        print(f"HTTP —É—Å–ø–µ—Ö: {http_result['success']}")
        
        if http_result['success']:
            print("‚úÖ MCP HTTP —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            print(f"HTTP —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {http_result['result'][:200]}...")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {http_result['error']}")
            
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º locations
        print("\nüìç –¢–µ—Å—Ç locations:")
        loc_result = client.get_locations()
        print(f"Locations —É—Å–ø–µ—Ö: {loc_result['success']}")
        
        if loc_result['success']:
            print("‚úÖ MCP Locations —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            print(f"Locations: {str(loc_result['result'])[:200]}...")
        else:
            print(f"‚ùå Locations –æ—à–∏–±–∫–∞: {loc_result['error']}")
    else:
        print(f"‚ùå MCP PING –æ—à–∏–±–∫–∞: {result['error']}")

def check_globalping_service():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–∞ Globalping"""
    
    print("\nüåê –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ Globalping...")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∞–π—Ç
    try:
        response = requests.get("https://globalping.io", timeout=5)
        print(f"–ì–ª–∞–≤–Ω—ã–π —Å–∞–π—Ç: {response.status_code} ‚úÖ")
    except:
        print("–ì–ª–∞–≤–Ω—ã–π —Å–∞–π—Ç: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω ‚ùå")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º REST API
    try:
        response = requests.get("https://api.globalping.io/v1/credits", timeout=5)
        print(f"REST API: {response.status_code} ‚úÖ")
    except:
        print("REST API: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω ‚ùå")
        
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º MCP —ç–Ω–¥–ø–æ–∏–Ω—Ç
    try:
        response = requests.get("https://mcp.globalping.dev", timeout=5)
        print(f"MCP —ç–Ω–¥–ø–æ–∏–Ω—Ç: {response.status_code}")
        if response.status_code == 200:
            print("‚úÖ MCP —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω")
        elif response.status_code == 404:
            print("‚ùå MCP —ç–Ω–¥–ø–æ–∏–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
        else:
            print(f"‚ö†Ô∏è MCP –æ—Ç–≤–µ—Ç: {response.status_code}")
    except Exception as e:
        print(f"‚ùå MCP –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {str(e)}")

if __name__ == "__main__":
    print("üß™ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Globalping MCP")
    print("=" * 60)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–∏—Å
        check_globalping_service()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
        working_endpoints = test_mcp_endpoints()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç
        test_improved_client()
        
        print("\nüèÅ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        
        if working_endpoints:
            print("‚úÖ –ù–∞–π–¥–µ–Ω—ã —Ä–∞–±–æ—á–∏–µ MCP —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã!")
        else:
            print("‚ùå MCP —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç")
            print("üí° –í–æ–∑–º–æ–∂–Ω–æ, MCP —Å–µ—Ä–≤–µ—Ä Globalping –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            print("üîÑ –ì–∏–±—Ä–∏–¥–Ω—ã–π –∫–ª–∏–µ–Ω—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—Å—è –Ω–∞ REST API")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: {e}")
        import traceback
        traceback.print_exc() 